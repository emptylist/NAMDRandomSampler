#!/usr/bin/env python

'''Simple script to randomly sample from dcd files.  Relys on VMD calls.'''

from random import randint
import subprocess
import sys
import os 

def write_vmd_script(input_name, frame_number, output_name):
    PSF_FILE = "1tcr_ion.psf"
    with open(".tmp_RandSampler_script.tcl", "w") as ftmp:
        ftmp.write("\n".join([
            "# NAMDRandomSampler.py generated script for extrating sampled frame."
            ,"mol new " + PSF_FILE
            ," ".join([
                "animate"
                , "read"
                , "dcd"
                , input_name + ".dcd"
                , "beg"
                , str(frame_number)
                , "end"
                , str(frame_number + 1)
            ])
            ,"set data [atomselect top all]"
            ,"$data writepdb " + output_name + ".pdb"
        ]))

def write_extended_system_file(input_name, frame_number, output_name):
    try:
        ext_system = subprocess.check_output(["grep"
                                              ,str(frame_number * 100)
                                              ,input_name + ".xst"
                                              ])
        with open(output_name + ".xsc", "w") as xsf:
            xsf.write("\n".join([
                "#NAMD extended system file"
                ,"#$LABELS step a_x a_y a_z b_x b_y b_z c_x c_y c_z o_x o_y o_z s_x s_y s_z s_u s_v s_w"
                ,ext_system]))
    except:
        print("Failed to find " + input_name + ".xst")

def write_configuration_file(name):
    with open("base_conf.conf", "r") as bcf:
        base_conf = bcf.readlines()
    with open(name + ".conf", "w") as conf_file:
        conf_file.write("#Autogenerated by NAMDRandomSampler.py \n")
        conf_file.write("set basename " + name + "\n")
        conf_file.write("".join(base_conf))

def write_submission_file(file_name):
    with open("sub_" + file_name, "w") as f:
        f.write("\n".join([
              "#!/bin/bash"
            , "#SBATCH -J TCR_2C_" + file_name
            , "#SBATCH -o " + file_name + ".out"
            , "#SBATCH -e " + file_name + ".err"
            , "#SBATCH -t 07:00:00"
            , "#SBATCH -n 672"
            , "#SBATCH -p normal"
            , "#SBATCH -A TG-MCB130014"
            , "#SBATCH --mail-user=crooks1379@gmail.com"
            , "#SBATCH --mail-type=ALL"
            , " "
            , "module load namd"
            , " ".join([
                  "ibrun"
                , "namd2"
                , file_name + ".conf"
                , ">"
                , file_name + ".log"
                ])
            ]))

if __name__ == "__main__":
    MODEL_NUMBER = 1
    dcd_file = sys.argv[1]
    input_name = dcd_file[:-4]
    output_name = "M" + str(MODEL_NUMBER) + dcd_file[2:-4]
    psf_file = "1tcr_ion.psf"
    frame_number = randint(1000, 6000)
    write_vmd_script(input_name, frame_number, output_name)
    os.system(" ".join(["vmd"
                     ,"-dispdev"
                     ,"text"
                     ,"-eofexit < .tmp_RandSampler_script.tcl > " + dcd_file[:-4] + ".log"
                           ]))
    write_extended_system_file(input_name, frame_number, output_name)
    write_configuration_file(output_name)
    write_submission_file(output_name)
    print("Files auto-generated for system " + input_name + " using frame " + str(frame_number))
